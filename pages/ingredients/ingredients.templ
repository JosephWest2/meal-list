package ingredients

import "josephwest2/meal-list/lib/db"
import "strconv"

templ Ingredients(ingredients []db.Ingredient, categories []db.IngredientCategory) {
    // TODO ingredients page
    <h2>Ingredients</h2>
    <form action="/ingredients" method="POST">
        <label for="ingredient-name">Name:</label>
        <input type="text" id="ingredient-name" name="ingredient-name" required>
        <label for="ingredient-category">Category:</label>
        <select id="ingredient-category" name="ingredient-category" required>
        for _, category := range categories {
            <option value={ strconv.FormatUint(uint64(category.ID), 10) }>{ category.Name }</option>
        }
        </select>
        <button class="btn" type="submit">Create</button>
    </form>
    <table>
        for _, ingredient := range ingredients {
            {{id := strconv.FormatUint(uint64(ingredient.ID), 10)}}
            <tr data-ingredient-id={id}>
                <td><input data-default={ingredient.Name} disabled class="ingredient-input" type="text" value={ ingredient.Name } data-ingredient-id={id}/></td>
                <td>
                    <select data-default={strconv.FormatUint(uint64(ingredient.CategoryID), 10)} disabled class="ingredient-input" type="text" value={ ingredient.Category.Name } data-ingredient-id={id}>
                    for _, category := range categories {
                        if category.ID == ingredient.CategoryID {
                            <option selected value={ strconv.FormatUint(uint64(category.ID), 10) }>{ category.Name }</option>
                        } else {
                            <option value={ strconv.FormatUint(uint64(category.ID), 10) }>{ category.Name }</option>
                        }
                    }
                    </select>
                </td>
                <td>
                    <button onclick={templ.JSFuncCall("ToggleEditIngredient", ingredient.ID)} data-toggle-button-id={id}>Edit</button>
                    <button disabled onclick={templ.JSFuncCall("UpdateIngredient", ingredient.ID)} data-ingredient-id={id}>Update</button>
                    <button disabled onclick={templ.JSFuncCall("DeleteIngredient", ingredient.ID)} data-ingredient-id={id}>Delete</button>
                </td>
            </tr>
        }
    </table>
    <script>
        function ToggleEditIngredient(id) {
            const input = document.querySelector(`input[data-ingredient-id='${id}']`)
            const select = document.querySelector(`select[data-ingredient-id='${id}']`)
            input.disabled = !input.disabled
            select.disabled = !select.disabled
            const buttons = document.querySelectorAll(`button[data-ingredient-id='${id}']`)
            buttons.forEach(button => {
                button.disabled = !button.disabled
            })
            const toggleButton = document.querySelector(`button[data-toggle-button-id='${id}']`)
            const isCancel = toggleButton.innerText == "Cancel"
            toggleButton.innerText = toggleButton.innerText == "Edit" ? "Cancel" : "Edit"

            if (isCancel) {
                input.value = input.getAttribute("data-default")
                select.value = select.getAttribute("data-default")
            }
        }

        async function UpdateIngredient(id) {
            const input = document.querySelector(`input[data-ingredient-id='${id}']`)
            const select = document.querySelector(`select[data-ingredient-id='${id}']`)
            const name = input.value
            const category = select.value
            console.log(name, category)

            res = await fetch(`/ingredients/${id}`, {
                method: "PATCH",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    name: name,
                    category: Number(category)
                })
            })

            if (res.ok) {
                alert("Success: ", res.statusText, res.body)
                input.setAttribute("data-default", name)
                select.setAttribute("data-default", category)
                ToggleEditIngredient(id)
            } else {
                alert(res.statusText, res.body)
            }

        }

        async function DeleteIngredient(id) {
            res = await fetch(`/ingredients/${id}`, {
                method: "DELETE"
            })
            if (res.ok) {
                alert("Success: ", res.statusText, res.body)
                document.querySelector(`tr[data-ingredient-id='${id}']`).remove()
            } else {
                alert(res.statusText, res.body)
            }

        }
    
    </script>

}